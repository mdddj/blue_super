// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

// Static analysis wrongly picks the IO variant, thus ignore this
// ignore_for_file: argument_type_not_assignable

import 'api/blue.dart';
import 'api/log.dart';
import 'dart:async';
import 'dart:convert';
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_web.dart';
import 'package:meta/meta.dart' as meta;
import 'package:uuid/uuid.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BPeripheralPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BlueAdapterPtr => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  BPeripheral
      dco_decode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
          dynamic raw);

  @protected
  BPeripheral
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
          dynamic raw);

  @protected
  BlueAdapter
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
          dynamic raw);

  @protected
  BPeripheral
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
          dynamic raw);

  @protected
  BlueAdapter
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
          dynamic raw);

  @protected
  Map<UuidValue, Uint8List> dco_decode_Map_Uuid_list_prim_u_8_strict_None(
      dynamic raw);

  @protected
  Map<int, Uint8List> dco_decode_Map_u_16_list_prim_u_8_strict_None(
      dynamic raw);

  @protected
  BPeripheral
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
          dynamic raw);

  @protected
  BlueAdapter
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
          dynamic raw);

  @protected
  RustStreamSink<BlueEvent> dco_decode_StreamSink_blue_event_Dco(dynamic raw);

  @protected
  RustStreamSink<LogEntry> dco_decode_StreamSink_log_entry_Dco(dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  UuidValue dco_decode_Uuid(dynamic raw);

  @protected
  BCentralState dco_decode_b_central_state(dynamic raw);

  @protected
  BCharacteristic dco_decode_b_characteristic(dynamic raw);

  @protected
  BWriteType dco_decode_b_write_type(dynamic raw);

  @protected
  BlueEvent dco_decode_blue_event(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  BCharacteristic dco_decode_box_autoadd_b_characteristic(dynamic raw);

  @protected
  DevicePeripheralId dco_decode_box_autoadd_device_peripheral_id(dynamic raw);

  @protected
  int dco_decode_box_autoadd_i_16(dynamic raw);

  @protected
  DevicePeripheralId dco_decode_device_peripheral_id(dynamic raw);

  @protected
  int dco_decode_i_16(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  PlatformInt64 dco_decode_i_64(dynamic raw);

  @protected
  List<BlueAdapter>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
          dynamic raw);

  @protected
  List<UuidValue> dco_decode_list_Uuid(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_u_8_loose(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<(int, Uint8List)> dco_decode_list_record_u_16_list_prim_u_8_strict(
      dynamic raw);

  @protected
  List<(UuidValue, Uint8List)> dco_decode_list_record_uuid_list_prim_u_8_strict(
      dynamic raw);

  @protected
  LogEntry dco_decode_log_entry(dynamic raw);

  @protected
  MyMobileLogger dco_decode_my_mobile_logger(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_i_16(dynamic raw);

  @protected
  (int, Uint8List) dco_decode_record_u_16_list_prim_u_8_strict(dynamic raw);

  @protected
  (UuidValue, Uint8List) dco_decode_record_uuid_list_prim_u_8_strict(
      dynamic raw);

  @protected
  SendToDartLogger dco_decode_send_to_dart_logger(dynamic raw);

  @protected
  int dco_decode_u_16(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  BigInt dco_decode_usize(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  BPeripheral
      sse_decode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
          SseDeserializer deserializer);

  @protected
  BPeripheral
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
          SseDeserializer deserializer);

  @protected
  BlueAdapter
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
          SseDeserializer deserializer);

  @protected
  BPeripheral
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
          SseDeserializer deserializer);

  @protected
  BlueAdapter
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
          SseDeserializer deserializer);

  @protected
  Map<UuidValue, Uint8List> sse_decode_Map_Uuid_list_prim_u_8_strict_None(
      SseDeserializer deserializer);

  @protected
  Map<int, Uint8List> sse_decode_Map_u_16_list_prim_u_8_strict_None(
      SseDeserializer deserializer);

  @protected
  BPeripheral
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
          SseDeserializer deserializer);

  @protected
  BlueAdapter
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
          SseDeserializer deserializer);

  @protected
  RustStreamSink<BlueEvent> sse_decode_StreamSink_blue_event_Dco(
      SseDeserializer deserializer);

  @protected
  RustStreamSink<LogEntry> sse_decode_StreamSink_log_entry_Dco(
      SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  UuidValue sse_decode_Uuid(SseDeserializer deserializer);

  @protected
  BCentralState sse_decode_b_central_state(SseDeserializer deserializer);

  @protected
  BCharacteristic sse_decode_b_characteristic(SseDeserializer deserializer);

  @protected
  BWriteType sse_decode_b_write_type(SseDeserializer deserializer);

  @protected
  BlueEvent sse_decode_blue_event(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  BCharacteristic sse_decode_box_autoadd_b_characteristic(
      SseDeserializer deserializer);

  @protected
  DevicePeripheralId sse_decode_box_autoadd_device_peripheral_id(
      SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_i_16(SseDeserializer deserializer);

  @protected
  DevicePeripheralId sse_decode_device_peripheral_id(
      SseDeserializer deserializer);

  @protected
  int sse_decode_i_16(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  PlatformInt64 sse_decode_i_64(SseDeserializer deserializer);

  @protected
  List<BlueAdapter>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
          SseDeserializer deserializer);

  @protected
  List<UuidValue> sse_decode_list_Uuid(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_u_8_loose(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<(int, Uint8List)> sse_decode_list_record_u_16_list_prim_u_8_strict(
      SseDeserializer deserializer);

  @protected
  List<(UuidValue, Uint8List)> sse_decode_list_record_uuid_list_prim_u_8_strict(
      SseDeserializer deserializer);

  @protected
  LogEntry sse_decode_log_entry(SseDeserializer deserializer);

  @protected
  MyMobileLogger sse_decode_my_mobile_logger(SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_i_16(SseDeserializer deserializer);

  @protected
  (int, Uint8List) sse_decode_record_u_16_list_prim_u_8_strict(
      SseDeserializer deserializer);

  @protected
  (UuidValue, Uint8List) sse_decode_record_uuid_list_prim_u_8_strict(
      SseDeserializer deserializer);

  @protected
  SendToDartLogger sse_decode_send_to_dart_logger(SseDeserializer deserializer);

  @protected
  int sse_decode_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_usize(SseDeserializer deserializer);

  @protected
  String cst_encode_AnyhowException(AnyhowException raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    throw UnimplementedError();
  }

  @protected
  int cst_encode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
      BPeripheral raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
        raw);
  }

  @protected
  JSAny cst_encode_Map_Uuid_list_prim_u_8_strict_None(
      Map<UuidValue, Uint8List> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_uuid_list_prim_u_8_strict(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  JSAny cst_encode_Map_u_16_list_prim_u_8_strict_None(Map<int, Uint8List> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_record_u_16_list_prim_u_8_strict(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  String cst_encode_StreamSink_blue_event_Dco(RustStreamSink<BlueEvent> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_String(raw.setupAndSerialize(
        codec: DcoCodec(
      decodeSuccessData: dco_decode_blue_event,
      decodeErrorData: dco_decode_AnyhowException,
    )));
  }

  @protected
  String cst_encode_StreamSink_log_entry_Dco(RustStreamSink<LogEntry> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_String(raw.setupAndSerialize(
        codec: DcoCodec(
      decodeSuccessData: dco_decode_log_entry,
      decodeErrorData: dco_decode_AnyhowException,
    )));
  }

  @protected
  String cst_encode_String(String raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  JSAny cst_encode_Uuid(UuidValue raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_list_prim_u_8_strict(raw.toBytes());
  }

  @protected
  JSAny cst_encode_b_characteristic(BCharacteristic raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_Uuid(raw.uuid), cst_encode_Uuid(raw.serviceUuid)]
        .jsify()!;
  }

  @protected
  JSAny cst_encode_blue_event(BlueEvent raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    if (raw is BlueEvent_DeviceDiscovered) {
      return [0, cst_encode_box_autoadd_device_peripheral_id(raw.field0)]
          .jsify()!;
    }
    if (raw is BlueEvent_DeviceUpdated) {
      return [1, cst_encode_box_autoadd_device_peripheral_id(raw.field0)]
          .jsify()!;
    }
    if (raw is BlueEvent_DeviceConnected) {
      return [2, cst_encode_box_autoadd_device_peripheral_id(raw.field0)]
          .jsify()!;
    }
    if (raw is BlueEvent_DeviceDisconnected) {
      return [3, cst_encode_box_autoadd_device_peripheral_id(raw.field0)]
          .jsify()!;
    }
    if (raw is BlueEvent_ManufacturerDataAdvertisement) {
      return [
        4,
        cst_encode_box_autoadd_device_peripheral_id(raw.field0),
        cst_encode_Map_u_16_list_prim_u_8_strict_None(raw.field1)
      ].jsify()!;
    }
    if (raw is BlueEvent_ServiceDataAdvertisement) {
      return [
        5,
        cst_encode_box_autoadd_device_peripheral_id(raw.field0),
        cst_encode_Map_Uuid_list_prim_u_8_strict_None(raw.field1)
      ].jsify()!;
    }
    if (raw is BlueEvent_ServicesAdvertisement) {
      return [
        6,
        cst_encode_box_autoadd_device_peripheral_id(raw.field0),
        cst_encode_list_Uuid(raw.field1)
      ].jsify()!;
    }
    if (raw is BlueEvent_StateUpdate) {
      return [7, cst_encode_b_central_state(raw.field0)].jsify()!;
    }
    if (raw is BlueEvent_ERROR) {
      return [8, cst_encode_String(raw.field0)].jsify()!;
    }

    throw Exception('unreachable');
  }

  @protected
  JSAny cst_encode_box_autoadd_b_characteristic(BCharacteristic raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_b_characteristic(raw);
  }

  @protected
  JSAny cst_encode_box_autoadd_device_peripheral_id(DevicePeripheralId raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_device_peripheral_id(raw);
  }

  @protected
  int cst_encode_box_autoadd_i_16(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_i_16(raw);
  }

  @protected
  JSAny cst_encode_device_peripheral_id(DevicePeripheralId raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_opt_String(raw.name),
      cst_encode_bool(raw.isConnected),
      cst_encode_String(raw.address),
      cst_encode_opt_box_autoadd_i_16(raw.txPowerLevel),
      cst_encode_opt_box_autoadd_i_16(raw.rssi),
      cst_encode_Map_u_16_list_prim_u_8_strict_None(raw.manufacturerData),
      cst_encode_Map_Uuid_list_prim_u_8_strict_None(raw.serviceData),
      cst_encode_list_Uuid(raw.services),
      cst_encode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
          raw.peripheral)
    ].jsify()!;
  }

  @protected
  JSAny cst_encode_i_64(PlatformInt64 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return castNativeBigInt(raw);
  }

  @protected
  JSAny
      cst_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
          List<BlueAdapter> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw
        .map(
            cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter)
        .toList()
        .jsify()!;
  }

  @protected
  JSAny cst_encode_list_Uuid(List<UuidValue> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_Uuid).toList().jsify()!;
  }

  @protected
  JSAny cst_encode_list_prim_u_8_loose(List<int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.jsify()!;
  }

  @protected
  JSAny cst_encode_list_prim_u_8_strict(Uint8List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.jsify()!;
  }

  @protected
  JSAny cst_encode_list_record_u_16_list_prim_u_8_strict(
      List<(int, Uint8List)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw
        .map(cst_encode_record_u_16_list_prim_u_8_strict)
        .toList()
        .jsify()!;
  }

  @protected
  JSAny cst_encode_list_record_uuid_list_prim_u_8_strict(
      List<(UuidValue, Uint8List)> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw
        .map(cst_encode_record_uuid_list_prim_u_8_strict)
        .toList()
        .jsify()!;
  }

  @protected
  JSAny cst_encode_log_entry(LogEntry raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_i_64(raw.timeMillis),
      cst_encode_i_32(raw.level),
      cst_encode_String(raw.tag),
      cst_encode_String(raw.msg)
    ].jsify()!;
  }

  @protected
  JSAny cst_encode_my_mobile_logger(MyMobileLogger raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [].jsify()!;
  }

  @protected
  String? cst_encode_opt_String(String? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_String(raw);
  }

  @protected
  int? cst_encode_opt_box_autoadd_i_16(int? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_box_autoadd_i_16(raw);
  }

  @protected
  JSAny cst_encode_record_u_16_list_prim_u_8_strict((int, Uint8List) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_u_16(raw.$1), cst_encode_list_prim_u_8_strict(raw.$2)]
        .jsify()!;
  }

  @protected
  JSAny cst_encode_record_uuid_list_prim_u_8_strict(
      (UuidValue, Uint8List) raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_Uuid(raw.$1), cst_encode_list_prim_u_8_strict(raw.$2)]
        .jsify()!;
  }

  @protected
  JSAny cst_encode_send_to_dart_logger(SendToDartLogger raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [].jsify()!;
  }

  @protected
  JSAny cst_encode_usize(BigInt raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return castNativeBigInt(raw);
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
      BPeripheral raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
      BlueAdapter raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
      BPeripheral raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
      BlueAdapter raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
      BPeripheral raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
      BlueAdapter raw);

  @protected
  int cst_encode_b_central_state(BCentralState raw);

  @protected
  int cst_encode_b_write_type(BWriteType raw);

  @protected
  bool cst_encode_bool(bool raw);

  @protected
  int cst_encode_i_16(int raw);

  @protected
  int cst_encode_i_32(int raw);

  @protected
  int cst_encode_u_16(int raw);

  @protected
  int cst_encode_u_8(int raw);

  @protected
  void cst_encode_unit(void raw);

  @protected
  void sse_encode_AnyhowException(
      AnyhowException self, SseSerializer serializer);

  @protected
  void
      sse_encode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
          BPeripheral self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
          BPeripheral self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
          BlueAdapter self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
          BPeripheral self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
          BlueAdapter self, SseSerializer serializer);

  @protected
  void sse_encode_Map_Uuid_list_prim_u_8_strict_None(
      Map<UuidValue, Uint8List> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_u_16_list_prim_u_8_strict_None(
      Map<int, Uint8List> self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
          BPeripheral self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
          BlueAdapter self, SseSerializer serializer);

  @protected
  void sse_encode_StreamSink_blue_event_Dco(
      RustStreamSink<BlueEvent> self, SseSerializer serializer);

  @protected
  void sse_encode_StreamSink_log_entry_Dco(
      RustStreamSink<LogEntry> self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_Uuid(UuidValue self, SseSerializer serializer);

  @protected
  void sse_encode_b_central_state(BCentralState self, SseSerializer serializer);

  @protected
  void sse_encode_b_characteristic(
      BCharacteristic self, SseSerializer serializer);

  @protected
  void sse_encode_b_write_type(BWriteType self, SseSerializer serializer);

  @protected
  void sse_encode_blue_event(BlueEvent self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_b_characteristic(
      BCharacteristic self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_device_peripheral_id(
      DevicePeripheralId self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_i_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_device_peripheral_id(
      DevicePeripheralId self, SseSerializer serializer);

  @protected
  void sse_encode_i_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_64(PlatformInt64 self, SseSerializer serializer);

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
          List<BlueAdapter> self, SseSerializer serializer);

  @protected
  void sse_encode_list_Uuid(List<UuidValue> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_loose(List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_u_16_list_prim_u_8_strict(
      List<(int, Uint8List)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_uuid_list_prim_u_8_strict(
      List<(UuidValue, Uint8List)> self, SseSerializer serializer);

  @protected
  void sse_encode_log_entry(LogEntry self, SseSerializer serializer);

  @protected
  void sse_encode_my_mobile_logger(
      MyMobileLogger self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_i_16(int? self, SseSerializer serializer);

  @protected
  void sse_encode_record_u_16_list_prim_u_8_strict(
      (int, Uint8List) self, SseSerializer serializer);

  @protected
  void sse_encode_record_uuid_list_prim_u_8_strict(
      (UuidValue, Uint8List) self, SseSerializer serializer);

  @protected
  void sse_encode_send_to_dart_logger(
      SendToDartLogger self, SseSerializer serializer);

  @protected
  void sse_encode_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_usize(BigInt self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  RustLibWire.fromExternalLibrary(ExternalLibrary lib);

  void wire__crate__api__blue__BPeripheral_connect(
          NativePortType port_, int that) =>
      wasmModule.wire__crate__api__blue__BPeripheral_connect(port_, that);

  void wire__crate__api__blue__BPeripheral_disconnect(
          NativePortType port_, int that) =>
      wasmModule.wire__crate__api__blue__BPeripheral_disconnect(port_, that);

  void wire__crate__api__blue__BPeripheral_write(NativePortType port_, int that,
          JSAny characteristic, JSAny data, int write_type) =>
      wasmModule.wire__crate__api__blue__BPeripheral_write(
          port_, that, characteristic, data, write_type);

  void wire__crate__api__blue__BlueAdapter_listen(
          NativePortType port_, int that, String data) =>
      wasmModule.wire__crate__api__blue__BlueAdapter_listen(port_, that, data);

  void wire__crate__api__blue__BlueAdapter_stop(
          NativePortType port_, int that) =>
      wasmModule.wire__crate__api__blue__BlueAdapter_stop(port_, that);

  void wire__crate__api__blue__adapters(NativePortType port_) =>
      wasmModule.wire__crate__api__blue__adapters(port_);

  void wire__crate__api__log__create_log_stream(
          NativePortType port_, String s) =>
      wasmModule.wire__crate__api__log__create_log_stream(port_, s);

  void wire__crate__api__blue__default_adapter(NativePortType port_) =>
      wasmModule.wire__crate__api__blue__default_adapter(port_);

  void wire__crate__api__blue__device_peripheral_id_infos_to_string(
          NativePortType port_, JSAny that) =>
      wasmModule.wire__crate__api__blue__device_peripheral_id_infos_to_string(
          port_, that);

  void wire__crate__api__log__init_logger(NativePortType port_) =>
      wasmModule.wire__crate__api__log__init_logger(port_);

  void wire__crate__api__log__my_mobile_logger_new(NativePortType port_) =>
      wasmModule.wire__crate__api__log__my_mobile_logger_new(port_);

  void wire__crate__api__log__rust_set_up(NativePortType port_) =>
      wasmModule.wire__crate__api__log__rust_set_up(port_);

  void wire__crate__api__log__send_to_dart_logger_new(NativePortType port_) =>
      wasmModule.wire__crate__api__log__send_to_dart_logger_new(port_);

  void wire__crate__api__log__send_to_dart_logger_set_stream_sink(
          NativePortType port_, String stream_sink) =>
      wasmModule.wire__crate__api__log__send_to_dart_logger_set_stream_sink(
          port_, stream_sink);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
          int ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
          int ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
              ptr);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
          int ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
          int ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
              ptr);
}

@JS('wasm_bindgen')
external RustLibWasmModule get wasmModule;

@JS()
@anonymous
extension type RustLibWasmModule._(JSObject _) implements JSObject {
  external void wire__crate__api__blue__BPeripheral_connect(
      NativePortType port_, int that);

  external void wire__crate__api__blue__BPeripheral_disconnect(
      NativePortType port_, int that);

  external void wire__crate__api__blue__BPeripheral_write(NativePortType port_,
      int that, JSAny characteristic, JSAny data, int write_type);

  external void wire__crate__api__blue__BlueAdapter_listen(
      NativePortType port_, int that, String data);

  external void wire__crate__api__blue__BlueAdapter_stop(
      NativePortType port_, int that);

  external void wire__crate__api__blue__adapters(NativePortType port_);

  external void wire__crate__api__log__create_log_stream(
      NativePortType port_, String s);

  external void wire__crate__api__blue__default_adapter(NativePortType port_);

  external void wire__crate__api__blue__device_peripheral_id_infos_to_string(
      NativePortType port_, JSAny that);

  external void wire__crate__api__log__init_logger(NativePortType port_);

  external void wire__crate__api__log__my_mobile_logger_new(
      NativePortType port_);

  external void wire__crate__api__log__rust_set_up(NativePortType port_);

  external void wire__crate__api__log__send_to_dart_logger_new(
      NativePortType port_);

  external void wire__crate__api__log__send_to_dart_logger_set_stream_sink(
      NativePortType port_, String stream_sink);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
          int ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBPeripheral(
          int ptr);

  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
          int ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBlueAdapter(
          int ptr);
}
